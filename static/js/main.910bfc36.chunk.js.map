{"version":3,"sources":["Components/Card/Card.jsx","Components/Cardlist/Cardlist.jsx","Components/Searchbox/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","name","src","id","email","Cardlist","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","catch","console","error","this","filterMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAceA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,kBAAf,UACI,qBAAKC,IAAG,iBAAYF,EAAMG,QAAQC,MAAQC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,4BAC7C,6BAAKN,EAAMG,QAAQC,OACnB,4BAAIJ,EAAMG,QAAQI,YCMfC,MAVf,SAAkBR,GACd,OACI,qBAAKC,UAAU,qBAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQG,U,MCCpCK,MANf,YAAkD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC9B,OACM,uBAAOZ,UAAU,oBAAoBa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KCqClFG,G,wDApCb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,gEAUO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAK,EAAKT,SAAS,CAAET,SAAUkB,OACzCC,MAAMC,QAAQC,S,+BAOT,IAAD,EAC2BC,KAAKT,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZa,EAAgBvB,EAASwB,QAAO,SAAA9B,GAAO,OACzCA,EAAQC,KAAK8B,cAAcC,SAAShB,EAAYe,kBAEpD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAckB,KAAKlB,eAC5D,cAAC,EAAD,CAAUJ,SAAUuB,W,GA/BVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.910bfc36.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Card.css'\n\nfunction Card(props) {\n    return (\n        <div className='card__container'>\n            <img alt={`monster${props.monster.name}`} src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react';\n\nimport './Cardlist.css';\nimport Card from './../Card/Card.jsx'\n\nfunction Cardlist(props) {\n    return (\n        <div className='cardlist__cardlist'>\n            {props.monsters.map(monster => (\n              <Card monster={monster} key={monster.id} />)\n            )}\n        </div>\n    )\n}\n\nexport default Cardlist","import React from 'react'\n\nimport './Searchbox.css'\n\nfunction Searchbox({ placeholder, handleChange}) {\n    return (\n          <input className='searchbox__search' type='search' placeholder={placeholder} onChange={handleChange} />  \n    )\n}\n\nexport default Searchbox\n","import React, { Component } from 'react';\n\nimport Cardlist from './Components/Cardlist/Cardlist.jsx'\nimport Searchbox from './Components/Searchbox/Searchbox.jsx'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => (this.setState({ monsters: users })))\n      .catch(console.error)\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filterMonster = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox placeholder='Search Monsters' handleChange={this.handleChange}/>       \n        <Cardlist monsters={filterMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}